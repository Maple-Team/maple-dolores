include: ".common.gitlab-ci.yml"

stages:
    - install
    # - test
    # - lint
    - build
    - image
    - deploy
    - notify

install-job:
    extends: .pnpm-config
    stage: install
    tags:
        - nodejs
    image: mapleimage123/node:20-alpine3.19
    script:
        - time pnpm install
    rules:
        - changes:
              - package.json
              - pnpm-lock.yaml
              - pnpm-workspace.yaml
              - packages/**/*
    cache:
        key:
            files:
                - pnpm-lock.yaml
        paths:
            - .pnpm-store
        policy: pull-push

# sub package 构建部署处理
build-react18-webpack-job:
    stage: build
    extends: .pnpm-config
    image: mapleimage123/node:20-alpine3.19
    tags:
        - nodejs
    script:
        - cd packages/react18-webpack
        - time pnpm install
        - time pnpm run build
        - mv dist ../../
        # 输出版本号给下一步骤使用
        - APP_VERSION=$(node -p -e "require('./package.json').version")
        - echo "$APP_VERSION" > ../../version.txt
    artifacts:
        paths:
            - dist
            - version.txt
    rules:
        - changes:
              - packages/react18-webpack/**/*
    cache:
        key:
            files:
                - pnpm-lock.yaml
        paths:
            - .pnpm-store
        policy: pull

build-react18-webpack-image-job:
    dependencies:
        - build-react18-webpack-job
    variables:
        SUB_PACKAGE: react18-webpack
    extends: .docker-build-stage
    rules:
        - changes:
              - packages/react18-webpack/**/*

deploy-react18-webpack-job:
    stage: deploy
    tags:
        - docker
    image: docker:27.3-dind
    variables:
        port: 7080
        container_name: react18-webpack
    needs:
        - job: build-react18-webpack-image-job
          optional: false
    script:
        - image=$(cat image.txt)
        - echo $image
        - docker stop $container_name || true
        - docker rm $container_name || true
        - docker run --name $container_name --network maple-network -d -p $port:80 $image

notify-success:
    stage: notify
    needs:
        - job: deploy-react18-webpack-job
          optional: false
        # 多个job
    rules:
        - when: on_success
    script:
        - >
            curl -X POST -H "Content-Type: application/json"
            -d '{"msg_type":"text","content":{"text":"Web APP 部署成功"}}'
            https://open.feishu.cn/open-apis/bot/v2/hook/f44c17ad-06b0-4957-a5be-2b066fcef6ce

notify-failure:
    stage: notify
    needs:
        - job: deploy-react18-webpack-job
          optional: false
    rules:
        - when: on_failure
    script:
        - >
            curl -X POST -H "Content-Type: application/json"
            -d '{"msg_type":"text","content":{"text":"Web APP 部署失败"}}'
            https://open.feishu.cn/open-apis/bot/v2/hook/f44c17ad-06b0-4957-a5be-2b066fcef6ce
