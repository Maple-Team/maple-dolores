stages:
    - install
    # - test
    - build
    # - image
    # - deploy

variables:
    IMAGE_NAME: development
    IMAGE_TAG: latest

cache:
    key:
        files:
            - pnpm-lock.yaml
            - package.json
    paths:
        - node_modules/
    policy: pull-push

install-job:
    stage: install
    tags:
        - nodejs
    image: mapleimage123/node:20-alpine3.19
    script:
        - time pnpm install
# test-job:
#     stage: test
#     image: mapleimage123/node:20-alpine3.19
#     script:
#         - npm install
#         - npm test

build-job:
    stage: build
    image: mapleimage123/node:20-alpine3.19
    tags:
        - nodejs
    script:
        - cd packages/react18-webpack
        - time pnpm install
        - time pnpm run build
    artifacts:
        paths:
            - packages/react18-webpack/dist
# build-docker-image-job:
#     stage: image
#     image: docker:19.03.12
#     services:
#         - docker:19.03.12-dind
#     script:
#         - docker info
#         - |
#             if [ "$CI_COMMIT_BRANCH" == "main" ]; then
#             export IMAGE_NAME=production
#             elif [ "$CI_COMMIT_BRANCH" == "development" ]; then
#             export IMAGE_NAME=staging
#             else
#             echo "Skipping Docker image build for branch $CI_COMMIT_BRANCH"
#             exit 0
#             fi
#         - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
#         - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
