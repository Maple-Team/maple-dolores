# 配置复用
.webpack-stage:
    before_script:
        - corepack enable
        - corepack prepare --activate
        - pnpm config set store-dir .pnpm-store
    # 私有仓库配置
    # - pnpm config set @scope:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    # - pnpm config set -- //${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken ${CI_JOB_TOKEN}
    cache:
        key:
            files:
                - pnpm-lock.yaml
        paths:
            - .pnpm-store
        policy: pull-push

# 公用的构建镜像配置
.docker-build-stage:
    stage: image
    image: docker:27.3-dind
    services:
        - docker:27.3-dind
    retry:
        max: 2
        when:
            - runner_system_failure
            - unknown_failure
            - script_failure
    script:
        # tag标记1：产物类型
        - |
            if [ "$CI_COMMIT_BRANCH" == "main" ]; then
            export IMAGE_NAME=production
            else
            export IMAGE_NAME=staging
            fi
        # tag标记2：子应用的版本号
        - cd packages/$SUB_PACKAGE
        - ls -al
        - sleep 10
        - version=$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
        - echo $version
        - cd ../../
        # 构建镜像
        - docker build -t $USER_DOCKER_NS/$CI_PROJECT_PATH_SLUG-$SUB_PACKAGE-$IMAGE_NAME:$version-$CI_COMMIT_SHORT_SHA .
        # docker login
        - docker login -u $USER_DOCKER_REGISTRY_USER -p $USER_DOCKER_REGISTRY_PASSWORD $USER_DOCKER_REGISTRY
        # 镜像推送
        - docker push $USER_DOCKER_NS/$CI_PROJECT_PATH_SLUG-$SUB_PACKAGE-$IMAGE_NAME:$version-$CI_COMMIT_SHORT_SHA
